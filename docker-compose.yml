version: '3'

services:
  api:
    container_name: fullrss_api
    build:
      context: .
      dockerfile: docker/go/Dockerfile
    env_file:
      - db.env
      - config.env
    ports:
      - 8080:8080
    tty:
      true
    volumes:
      - ./data/api:/go/src/api
    depends_on:
      - postgres
    restart: always

  postgres: # 起動コンテナを区別する名称。コンテナネットワーク上でのホスト名になる
    container_name: fullrss_db
    image: postgres:12.4-alpine # ここでDockerHubから取得したいイメージ:タグを指定する
    env_file:
      - db.env
    ports:
      - 5432:5432 # ポート転送の設定 ... ホスト側ポート:コンテナ内ポート
    volumes: # マウントの設定 ... ホスト側ディレクトリ:コンテナ側ディレクトリ
      - ./data/db/sh:/docker-entrypoint-initdb.d # この中の.sh、.sqlファイルは自動実行される
      - postgres-db:/var/lib/postgresql/data
    restart: always

  node:
    container_name: fullrss_app
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - config.env
    volumes:
     - ./data/react/app:/usr/src/app
    command: sh -c "cd full-rss-generator && yarn start"
    ports:
     - "3000:3000"
    tty: true
    depends_on:
     - api
    restart: always

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - config.env
    volumes:
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/nginx/htpasswd:/etc/nginx/htpasswd
      - certbot-conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      - node
      - api
    restart: always

  certbot:
    image: certbot/certbot:arm32v6-latest
    volumes:
      - certbot-conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx
    restart: always
volumes:
    postgres-db:
      driver_opts:
        type: none
        device: $PWD/data/db/storage
        o: bind
    certbot-conf:
      driver_opts:
        type: none
        device: $PWD/data/certbot/conf
        o: bind
    certbot-www:
      driver_opts:
        type: none
        device: $PWD/data/certbot/www
        o: bind
